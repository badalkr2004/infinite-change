// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Authentication models
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  USER
  ADMIN
}

// Service models based on the website content
model MindfulnessService {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  duration    String
  level       String
  features    String[] @db.Text
  serviceLink String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CounsellingService {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  duration    String
  level       String
  features    String[] @db.Text
  serviceLink String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model BeyondWordsService {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  features    String[] @db.Text
  serviceLink String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CorporateService {
  id          String   @id @default(cuid())
  icon        String
  category    String
  title       String
  description String   @db.Text
  features    String[] @db.Text
  serviceLink String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Testimonial {
  id          String   @id @default(cuid())
  name        String
  role        String?
  company     String?
  content     String   @db.Text
  rating      Int      @default(5)
  image       String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
